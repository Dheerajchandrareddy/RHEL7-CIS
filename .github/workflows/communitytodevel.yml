# This is a basic workflow to help you get started with Actions

name: CommunityToDevel

# Controls when the action will run.
# Triggers the workflow on push or pull request
# events but only for the devel branch
on:
  pull_request:
    branches: [ devel ]
# Set the OS to test on here
# Name matches the os_name.tfvars file
# one of
# - centos7
# - rocky8

env: 
  TEST_OS: centos7

# A workflow run is made up of one or more jobs
# that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, 
      # so your job can access it
      - uses: actions/checkout@v2

      - name: Add-SSH-KEY
        working-directory: .github/workflows
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          PRIVATE_KEY: "${{ secrets.SSH_PRV_KEY }}"
        run: |
          mkdir .ssh
          chmod 700 .ssh
          echo $PRIVATE_KEY > .ssh/github_actions.pem
          chmod 600 .ssh/github_actions.pem
          #ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          #ssh-add .ssh/github_actions.pem

### Build out the server
      - name: Terraform-Init
        working-directory: .github/workflows
        run: terraform init

      - name: Terraform-Validate
        working-directory: .github/workflows
        run: terraform validate

      - name: Terraform-Apply
        working-directory: .github/workflows
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply -var-file "${TEST_OS}.tfvars" --auto-approve

## debug ansible host file
#      - name: find ansible host file
#        working-directory: /home/runner
#        run: find ./ -name hosts.yml; cat `find ./ -name hosts.yml`
#      
#      - name: Find ssh key 
#        working-directory: .github/workflows/.ssh
#        run: whoami; pwd; cat github_actions.pem

#      - name: Show Ansible hostfile
#        working-directory: .github/workflows
#        run: cat hosts.yml


# Centos 7 images take a while to come up insert sleep or playbook fails
#      - name: if RHEL7 - Sleep for 60 seconds 
#        if: ${{ github.event.repository.name }} == "MindPointGroup/RHEL7-CIS" || ${{ github.event.repository.name }} == "MindPointGroup/RHEL7-STIG"
#        run: sleep 60s
#        shell: bash

## Run the ansible playbook
#      - name: Play Ansible Playbook
#        uses: arillso/action.playbook@master
#        with:
#          playbook: site.yml
#          inventory: .github/workflows/hosts.yml
#          galaxy_file: collections/requirements.yml
#          private_key: ${{ secrets.SSH_PRV_KEY }}
#          verbose: 3
#        env:
#          ANSIBLE_HOST_KEY_CHECKING: "false"
#          ANSIBLE_DEPRECATION_WARNINGS: "false"

# Remove test system from AWS

      - name: Terraform-Destroy - if apply success
        working-directory: .github/workflows
        if: needs.Terraform-Apply.result == 'success'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          OS_TFVARS: centos7.tfvars
        run: terraform destroy -var-file "${TEST_OS}.tfvars" -auto-approve
